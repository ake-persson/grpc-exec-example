// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exec.proto

package exec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Command              string   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Arguments            []string `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Environment          []string `protobuf:"bytes,4,rep,name=environment,proto3" json:"environment,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Group                string   `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	Directory            string   `protobuf:"bytes,7,opt,name=directory,proto3" json:"directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_exec_64e1c1837ec72fb9, []int{0}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Command) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Command) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *Command) GetEnvironment() []string {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *Command) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Command) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Command) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

type Message struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Line                 uint32               `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Message              string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_exec_64e1c1837ec72fb9, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Message) GetLine() uint32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "exec.Command")
	proto.RegisterType((*Message)(nil), "exec.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExecCommandClient is the client API for ExecCommand service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecCommandClient interface {
	Exec(ctx context.Context, in *Command, opts ...grpc.CallOption) (ExecCommand_ExecClient, error)
}

type execCommandClient struct {
	cc *grpc.ClientConn
}

func NewExecCommandClient(cc *grpc.ClientConn) ExecCommandClient {
	return &execCommandClient{cc}
}

func (c *execCommandClient) Exec(ctx context.Context, in *Command, opts ...grpc.CallOption) (ExecCommand_ExecClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExecCommand_serviceDesc.Streams[0], "/exec.ExecCommand/Exec", opts...)
	if err != nil {
		return nil, err
	}
	x := &execCommandExecClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExecCommand_ExecClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type execCommandExecClient struct {
	grpc.ClientStream
}

func (x *execCommandExecClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExecCommandServer is the server API for ExecCommand service.
type ExecCommandServer interface {
	Exec(*Command, ExecCommand_ExecServer) error
}

func RegisterExecCommandServer(s *grpc.Server, srv ExecCommandServer) {
	s.RegisterService(&_ExecCommand_serviceDesc, srv)
}

func _ExecCommand_Exec_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Command)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExecCommandServer).Exec(m, &execCommandExecServer{stream})
}

type ExecCommand_ExecServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type execCommandExecServer struct {
	grpc.ServerStream
}

func (x *execCommandExecServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

var _ExecCommand_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exec.ExecCommand",
	HandlerType: (*ExecCommandServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Exec",
			Handler:       _ExecCommand_Exec_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "exec.proto",
}

func init() { proto.RegisterFile("exec.proto", fileDescriptor_exec_64e1c1837ec72fb9) }

var fileDescriptor_exec_64e1c1837ec72fb9 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcd, 0x4e, 0xac, 0x40,
	0x10, 0x85, 0x2f, 0x17, 0x66, 0x08, 0x45, 0x66, 0xd3, 0x71, 0xd1, 0x21, 0x26, 0x12, 0x56, 0xac,
	0x18, 0x33, 0x2e, 0x74, 0x6f, 0x5c, 0xba, 0x21, 0xbe, 0x00, 0x03, 0x25, 0x21, 0x99, 0xa6, 0xb1,
	0x7f, 0xcc, 0xf8, 0x74, 0xbe, 0x9a, 0xe9, 0xea, 0x46, 0xdc, 0xd5, 0xf9, 0xaa, 0x52, 0x55, 0xe7,
	0x00, 0xe0, 0x15, 0xfb, 0x66, 0x51, 0xd2, 0x48, 0x96, 0xb8, 0xba, 0xb8, 0x1b, 0xa5, 0x1c, 0x2f,
	0x78, 0x24, 0x76, 0xb6, 0xef, 0x47, 0x33, 0x09, 0xd4, 0xa6, 0x13, 0x8b, 0x1f, 0xab, 0xbe, 0x23,
	0x48, 0x9f, 0xa5, 0x10, 0xdd, 0x3c, 0x30, 0x06, 0x89, 0xb5, 0xd3, 0xc0, 0xa3, 0x32, 0xaa, 0xb3,
	0x96, 0x6a, 0xc6, 0x21, 0xed, 0x7d, 0x9b, 0xff, 0x27, 0xbc, 0x4a, 0x76, 0x0b, 0x59, 0xa7, 0x46,
	0x2b, 0x70, 0x36, 0x9a, 0xc7, 0x65, 0x5c, 0x67, 0xed, 0x06, 0x58, 0x09, 0x39, 0xce, 0x9f, 0x93,
	0x92, 0xb3, 0xd3, 0x3c, 0xa1, 0xfe, 0x5f, 0x44, 0xd7, 0x34, 0x2a, 0xbe, 0x0b, 0xd7, 0x34, 0x2a,
	0x76, 0x03, 0xbb, 0x51, 0x49, 0xbb, 0xf0, 0x3d, 0x41, 0x2f, 0xdc, 0xa5, 0x61, 0x52, 0xd8, 0x1b,
	0xa9, 0xbe, 0x78, 0x4a, 0x9d, 0x0d, 0x54, 0x1f, 0x90, 0xbe, 0xa2, 0xd6, 0xdd, 0x88, 0xec, 0x09,
	0xb2, 0x5f, 0x7f, 0xe4, 0x22, 0x3f, 0x15, 0x8d, 0x4f, 0xa0, 0x59, 0x13, 0x68, 0xde, 0xd6, 0x89,
	0x76, 0x1b, 0x76, 0xcf, 0x5c, 0xa6, 0x19, 0xc9, 0xe3, 0xa1, 0xa5, 0xda, 0x59, 0x17, 0x7e, 0x31,
	0x8f, 0xbd, 0xf5, 0x20, 0x4f, 0x8f, 0x90, 0xbf, 0x5c, 0xb1, 0x5f, 0x73, 0xab, 0x21, 0x71, 0x92,
	0x1d, 0x1a, 0xca, 0x3f, 0xe0, 0x22, 0xc8, 0xf0, 0x5c, 0xf5, 0xef, 0x3e, 0x3a, 0xef, 0xe9, 0x8b,
	0x87, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x68, 0xf4, 0x77, 0xa9, 0x01, 0x00, 0x00,
}
