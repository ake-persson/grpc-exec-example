# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import exec_pb2 as exec__pb2


class ExecCommandStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Exec = channel.unary_stream(
        '/exec.ExecCommand/Exec',
        request_serializer=exec__pb2.Command.SerializeToString,
        response_deserializer=exec__pb2.Message.FromString,
        )


class ExecCommandServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Exec(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExecCommandServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Exec': grpc.unary_stream_rpc_method_handler(
          servicer.Exec,
          request_deserializer=exec__pb2.Command.FromString,
          response_serializer=exec__pb2.Message.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'exec.ExecCommand', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
